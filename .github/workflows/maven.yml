env:
  CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  DOCKER_RESOURCES: ./model/src/test/resources/docker
  MAVEN_NASHORN: ''
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
jobs:
  build:
    env:
      JSQL_DOCKERFILE: ${{ matrix.jdk }}
      MAVEN_NASHORN: ${{ matrix.nashorn }}
    name: Tests on Docker
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - continue-on-error: true
      name: Set up JDK
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 18
    - continue-on-error: true
      name: Set Maven dependencies cache
      uses: actions/cache@v3
      with:
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        path: ~/.m2/repository
        restore-keys: ${{ runner.os }}-maven-
    - continue-on-error: true
      name: Install Maven dependencies
      run: mvn clean install -DskipTests dependency:tree
    - continue-on-error: true
      name: Run databases and LAMP
      run: 'docker-compose -f $DOCKER_RESOURCES/docker-compose.yml build --parallel

        docker-compose -f $DOCKER_RESOURCES/docker-compose.yml up -d

        '
    - continue-on-error: true
      name: List images and containers
      run: docker images && docker container ls
    - continue-on-error: true
      name: Database health checks and configuration
      run: '$DOCKER_RESOURCES/scripts/healthcheck/healthcheck.sh

        $DOCKER_RESOURCES/scripts/buff.sh

        $DOCKER_RESOURCES/scripts/verify.sh

        '
    - continue-on-error: true
      name: Build project container
      run: docker build -t jsql:latest --build-arg JSQL_DOCKERFILE -f $DOCKER_RESOURCES/Dockerfile.jsql
        .
    - continue-on-error: true
      name: Unit and integration tests with Sonar scan
      run: $DOCKER_RESOURCES/scripts/run-on-docker.sh 'mvn clean install sonar:sonar
        -P tests org.pitest:pitest-maven:mutationCoverage'
    - continue-on-error: true
      name: Databases statistics
      run: $DOCKER_RESOURCES/scripts/verify.sh
    - continue-on-error: true
      name: Copy files and coverage reports from container
      run: 'mkdir -p shared-resources/model shared-resources/view

        docker cp docker_jsql-container:view/. shared-resources/view

        docker cp docker_jsql-container:model/. shared-resources/model

        docker cp docker_jsql-container:pom.xml shared-resources

        '
    - continue-on-error: true
      name: Codecov scan
      run: cd shared-resources && bash <(curl -s https://codecov.io/bash) || true
    - continue-on-error: true
      name: Codacy scan
      run: cd shared-resources && bash <(curl -Ls https://coverage.codacy.com/get.sh)
        || true
    - continue-on-error: true
      name: Publish coverage
      run: "git checkout docs\nrm -r view/target/site/ view/target/pit-reports/ model/target/site/\
        \ model/target/pit-reports/ || echo 'Folder(s) not found'\nFOLDER=view/target/site/jacoco\
        \ bash -c 'mkdir -p $FOLDER/ && cp -r shared-resources/$FOLDER/. $FOLDER/'\n\
        FOLDER=model/target/site/jacoco bash -c 'mkdir -p $FOLDER/ && cp -r shared-resources/$FOLDER/.\
        \ $FOLDER/'\nFOLDER=view/target/pit-reports bash -c 'mkdir -p $FOLDER/ &&\
        \ cp -r shared-resources/$FOLDER/. $FOLDER/'\nFOLDER=model/target/pit-reports\
        \ bash -c 'mkdir -p $FOLDER/ && cp -r shared-resources/$FOLDER/. $FOLDER/'\n\
        git config user.name \"Github Actions\"\ngit config user.email no-response@github.com\
        \    \ngit pull -s ours  # ignore remote changes when updated by parallel\
        \ jobs\n# folders view/target model/target contain other build files from\
        \ 'Install Maven dependencies'\ngit add -f view/target/site/jacoco model/target/site/jacoco\
        \ view/target/pit-reports model/target/pit-reports\ngit commit -m \"Publish\
        \ jacoco and pitest reports\"\ngit push\n"
    strategy:
      fail-fast: false
      matrix:
        include:
        - jdk: 3.8.6-eclipse-temurin-18
          nashorn: ''
        - jdk: 3.9.3-eclipse-temurin-20
          nashorn: ''
  build-jdk11:
    env:
      JSQL_DOCKERFILE: 3.8.1-jdk-11-slim
      MAVEN_NASHORN: -Dnashorn.args=--no-deprecation-warning
    name: Test view on Docker (jdk-11)
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - continue-on-error: true
      name: Set up JDK
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 18
    - continue-on-error: true
      name: Set Maven dependencies cache
      uses: actions/cache@v3
      with:
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        path: ~/.m2/repository
        restore-keys: ${{ runner.os }}-maven-
    - continue-on-error: true
      name: Install Maven dependencies
      run: mvn clean install -DskipTests dependency:tree
    - continue-on-error: true
      name: Build project container
      run: docker build -t jsql:latest --build-arg JSQL_DOCKERFILE -f $DOCKER_RESOURCES/Dockerfile.jsql
        .
    - continue-on-error: true
      name: Unit tests
      run: $DOCKER_RESOURCES/scripts/run-on-docker-no-network.sh 'cd view/ && mvn
        clean install -P tests'
    strategy:
      fail-fast: false
  codeql:
    name: CodeQL
    uses: ./.github/workflows/run-codeql.yml
  release:
    name: Publish
    needs:
    - build-jdk11
    - build
    - codeql
    secrets: inherit
    uses: ./.github/workflows/release.yml
on:
  repository_dispatch:
    types: trigger-ga___maven.yml
